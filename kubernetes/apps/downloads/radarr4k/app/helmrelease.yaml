---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr4k
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  dependsOn:
    - name: cloudnative-pg
      namespace: database
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:

    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 65539

    controllers:
      radarr4k:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.8
            envFrom: &envFrom
              - secretRef:
                  name: radarr4k

        containers:
          radarr4k:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.20.1.9773@sha256:8187c129a78fdfe15b1603db9175abd2be0e1ca2e99ea3733987c3ae941da165

            env:
              TZ: "${TIMEZONE}"
              RADARR__PORT: &port 7878
              RADARR__AUTHENTICATION_METHOD: External
            envFrom: *envFrom

            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5

    service:
      radarr4k:
        controller: radarr4k
        ports:
          http:
            port: *port

    ingress:
      radarr4k:
        enabled: true
        className: "internal"
        hosts:
          - host: &host "radarr4k.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: radarr4k
                  port: http
        tls:
          - hosts:
              - *host
            secretName: radarr4k.tls

    persistence:
      config:
        existingClaim: *app

      media:
        type: nfs
        path: /mnt/volume01/4k
        globalMounts:
          - path: /4k

      temp:
        type: nfs
        path: /mnt/volume01/sabnzbd4k
        globalMounts:
          - path: /temp_dir4k

  valuesFrom:
    - kind: Secret
      name: *app
      valuesKey: NAS4_ADDR
      targetPath: persistence.media.server

    - kind: Secret
      name: *app
      valuesKey: NAS4_ADDR
      targetPath: persistence.temp.server
