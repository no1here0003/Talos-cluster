---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5

  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: minio
      namespace: minio
    - name: volsync
      namespace: volsync-system
  values:
    defaultPodOptions:
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
      securityContext:
        runAsUser: 0
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 44
          - 107
          - 100
          - 109
          - 1000
          - 65539

    controllers:
      plex:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.41.8.9834
            env:
              TZ: "America/New_York"
              ADVERTISE_IP: "http://${PLEX_LB}:32410/"
              HOSTNAME: "plex-cluster"
              PLEX_CLAIM: ${PLEX_CLAIM}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 1000m
                memory: 16G
              limits:
                gpu.intel.com/i915: 1
                memory: 64G

        pod:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: node-role.kubernetes.io/control-plane
                        operator: DoesNotExist

    service:
      plex:
        controller: plex
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${PLEX_LB}
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: 32410
            targetPort: 32400
            protocol: TCP

    ingress:
      plex:
        enabled: true
        className: "external"
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        hosts:
          - host: &host "plex.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: plex
                  port: http
        tls:
          - hosts:
              - *host
            secretName: plex.tls

    persistence:
      config:
        existingClaim: *app

      media:
        type: nfs
        path: /volume1/Media
        globalMounts:
          - path: /media
            readOnly: true

      media2:
        type: nfs
        path: /volume1/Media2
        globalMounts:
          - path: /media2
            readOnly: true

      media3:
        type: nfs
        path: /volume1/Media
        globalMounts:
          - path: /media3
            readOnly: true

      media4k:
        type: nfs
        path: /mnt/TrueNAS/Media/4k
        globalMounts:
          - path: /4k
            readOnly: true

      backups:
        type: nfs
        path: /volume1/Kubernetes/plex
        globalMounts:
          - path: /backups

      transcode:
        type: emptyDir
        globalMounts:
          - path: /transcode

      plex-cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache

  valuesFrom:
    - kind: Secret
      name: *app
      valuesKey: NAS1_ADDR
      targetPath: persistence.media.server

    - kind: Secret
      name: *app
      valuesKey: NAS2_ADDR
      targetPath: persistence.media2.server

    - kind: Secret
      name: *app
      valuesKey: NAS3_ADDR
      targetPath: persistence.media3.server

    - kind: Secret
      name: *app
      valuesKey: NAS4_ADDR
      targetPath: persistence.media4k.server

    - kind: Secret
      name: *app
      valuesKey: NAS2_ADDR
      targetPath: persistence.backups.server
